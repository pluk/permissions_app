{"map":"{\"version\":3,\"sources\":[\"/home/pluk/scripts/permissions_app/js-app/src/ApiClient.js\",\"/home/pluk/scripts/permissions_app/js-app/src/constants.js\",\"/home/pluk/scripts/permissions_app/js-app/src/App.js\",\"/home/pluk/scripts/permissions_app/js-app/src/serviceWorker.js\",\"/home/pluk/scripts/permissions_app/js-app/src/index.js\"],\"names\":[\"ApiClient\",\"APIHost\",\"Object\",\"classCallCheck\",\"this\",\"config\",\"headers\",\"resource\",\"params\",\"arguments\",\"length\",\"undefined\",\"axios\",\"get\",\"payload\",\"put\",\"API_HOST\",\"window\",\"location\",\"hostname\",\"queryString\",\"require\",\"App\",\"_this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"e\",\"_ref\",\"name\",\"value\",\"setState\",\"defineProperty\",\"handleGetPermissions\",\"permissions\",\"parsedUrl\",\"parseUrl\",\"state\",\"url\",\"query\",\"hl\",\"APIClient\",\"id\",\"then\",\"response\",\"data\",\"_renderList\",\"react_default\",\"a\",\"createElement\",\"List\",\"map\",\"permission\",\"i\",\"_renderPermission\",\"Item\",\"key\",\"Image\",\"style\",\"fontSize\",\"avatar\",\"src\",\"picture\",\"Content\",\"Header\",\"title\",\"bulleted\",\"perm\",\"j\",\"Description\",\"appId\",\"Container\",\"text\",\"as\",\"Form\",\"onSubmit\",\"Input\",\"placeholder\",\"onChange\",\"Button\",\"content\",\"Component\",\"Boolean\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import axios from 'axios';\\n\\nexport default class ApiClient {\\n    constructor(APIHost) {\\n        this.APIHost = APIHost;\\n        this.config = {'headers': {}};\\n    }\\n\\n\\n    get (resource, params = '') {\\n        return axios.get(this.APIHost + resource + '?' + params, this.config);\\n    }\\n\\n    put (resource, payload) {\\n        return axios.put(this.APIHost + resource, payload, this.config);\\n    }\\n}\",\"export const API_HOST = 'http://' + window.location.hostname + ':8080';\",\"import React, { Component } from 'react';\\nimport { Container, List, Form, Image, Header } from 'semantic-ui-react'\\nimport 'semantic-ui-css/semantic.min.css'\\n\\nimport ApiClient from './ApiClient';\\nimport { API_HOST } from './constants';\\n\\nconst queryString = require('query-string');\\n\\n\\nclass App extends Component {\\n  constructor() {\\n    super();\\n\\n    this.appId = null;\\n    this.APIClient = new ApiClient(API_HOST);\\n\\n    this.state = {\\n        permissions: [],\\n        url: ''\\n    };\\n  }\\n\\n  render() {\\n    const url = this.state.url\\n\\n    return (\\n      <Container text>\\n        <Header as='h2'>PermissionsApp</Header>\\n        <Form onSubmit={this.handleGetPermissions}>\\n          <Form.Input\\n              placeholder='url...'\\n              name='url'\\n              value={url}\\n              onChange={this.handleChange}\\n            />\\n            <Form.Button content='Search' />\\n        </Form>\\n\\n        {this._renderList(this.state.permissions)}\\n\\n      </Container>\\n    );\\n  }\\n\\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\\n\\n  handleGetPermissions = (e) => {\\n    this.setState({\\n      permissions: []\\n    });\\n    var parsedUrl = queryString.parseUrl(this.state.url)\\n\\n    if (!('id' in parsedUrl.query)) {\\n      return '';\\n    }\\n\\n    var hl = parsedUrl.query.hl || 'en'\\n\\n    this.APIClient.get(\\n        '/permissions',\\n        'appId=' + parsedUrl.query.id + '&hl=' + hl\\n    )\\n        .then((response) => {\\n            this.setState({\\n                permissions: response.data.permissions\\n            });\\n        });\\n  };\\n\\n  _renderList = (permissions) => {\\n    if (permissions.length === 0) {\\n      return '';\\n    }\\n\\n    return (\\n      <List>\\n        {permissions.map((permission, i) => { return (this._renderPermission(permission, i))})}\\n      </List>\\n    );\\n  };\\n\\n  _renderPermission = (permission, i) => {\\n    return (\\n      <List.Item key={i}>\\n        <Image style={{'fontSize':10}} avatar src={permission.picture}/>\\n        <List.Content>\\n          <List.Header>{ permission.title }</List.Header>\\n          <List bulleted>\\n            {permission.permissions.map((perm, j) => { return (<List.Item key={j}><List.Description>{perm}</List.Description></List.Item>) })}\\n          </List>\\n        </List.Content>\\n      </List.Item>\\n    );\\n  };\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{176:function(e,t,n){e.exports=n(328)},181:function(e,t,n){},328:function(e,t,n){\"use strict\";n.r(t);var a=n(1),r=n.n(a),i=n(42),s=n.n(i),o=(n(181),n(145)),l=n(65),c=n(66),u=n(164),m=n(146),h=n(165),p=n(338),d=n(163),f=n(336),v=n(339),g=n(337),w=(n(182),n(92)),E=n.n(w),b=function(){function e(t){Object(l.a)(this,e),this.APIHost=t,this.config={headers:{}}}return Object(c.a)(e,[{key:\"get\",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";return E.a.get(this.APIHost+e+\"?\"+t,this.config)}},{key:\"put\",value:function(e,t){return E.a.put(this.APIHost+e,t,this.config)}}]),e}(),y=\"http://\"+window.location.hostname+\":8080\",I=n(202),P=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(u.a)(this,Object(m.a)(t).call(this))).handleChange=function(t,n){var a=n.name,r=n.value;return e.setState(Object(o.a)({},a,r))},e.handleGetPermissions=function(t){e.setState({permissions:[]});var n=I.parseUrl(e.state.url);if(!(\"id\"in n.query))return\"\";var a=n.query.hl||\"en\";e.APIClient.get(\"/permissions\",\"appId=\"+n.query.id+\"&hl=\"+a).then(function(t){e.setState({permissions:t.data.permissions})})},e._renderList=function(t){return 0===t.length?\"\":r.a.createElement(p.a,null,t.map(function(t,n){return e._renderPermission(t,n)}))},e._renderPermission=function(e,t){return r.a.createElement(p.a.Item,{key:t},r.a.createElement(d.a,{style:{fontSize:10},avatar:!0,src:e.picture}),r.a.createElement(p.a.Content,null,r.a.createElement(p.a.Header,null,e.title),r.a.createElement(p.a,{bulleted:!0},e.permissions.map(function(e,t){return r.a.createElement(p.a.Item,{key:t},r.a.createElement(p.a.Description,null,e))}))))},e.appId=null,e.APIClient=new b(y),e.state={permissions:[],url:\"\"},e}return Object(h.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){var e=this.state.url;return r.a.createElement(f.a,{text:!0},r.a.createElement(v.a,{as:\"h2\"},\"PermissionsApp\"),r.a.createElement(g.a,{onSubmit:this.handleGetPermissions},r.a.createElement(g.a.Input,{placeholder:\"url...\",name:\"url\",value:e,onChange:this.handleChange}),r.a.createElement(g.a.Button,{content:\"Search\"})),this._renderList(this.state.permissions))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(r.a.createElement(P,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[176,1,2]]]);","extractedComments":[]}